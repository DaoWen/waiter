#!/bin/bash
#
# A wrapper script for the Waiter-specific setup for a user command in a Waiter-K8s pod.
# The script is usually invoked by prepending it to the user's Waiter command.
#
# A single argument is expected, the user's command string,
# which is executed as its own bash shell process.

# Ignore SIGTERM sent by Kubernetes on pod deletion,
# waiting for SIGKILL (force delete) before exiting.
trap : SIGTERM

# Run the user's Waiter app command,
# copying stdout and stderr to respectively named files.
# We tee the output so that stdout and stderr are still accessible
# via the Kubernetes `kubectl logs <pod-name>` command.
/bin/bash -c "$1" 1> >(tee stdout) 2> >(tee stderr 1>&2)
exit_code=$?

# If the sub-command exited 143 (usually indicated it was killed via SIGTERM),
# then sleep indefinitely, awaiting a SIGKILL from Kubernetes
if [ $exit_code -eq 143 ]; then
    while true; do
        sleep 60
    done
fi

# Propagate the user's command's exit code
exit $exit_code
